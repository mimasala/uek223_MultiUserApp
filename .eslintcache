[{"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\index.tsx":"1","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\App.tsx":"2","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Contexts\\ActiveUserContext.tsx":"3","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Router\\Router.tsx":"4","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\NavBar\\NavBar.tsx":"5","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\Footer\\Footer.tsx":"6","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\UserService.ts":"7","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Authorities.ts":"8","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\AuthorityService.ts":"9","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Api.ts":"10","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Roles.ts":"11","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Router\\PrivateRoute.tsx":"12","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\NotFound\\NotFoundPage.tsx":"13","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\UserPage\\UserTable.tsx":"14","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\EventsManage\\EventsManagePage.tsx":"15","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\EventPage\\EventPage.tsx":"16","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\OwnEventsPage\\OwnEventsPage.tsx":"17","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\HomePage.tsx":"18","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx":"19","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\AdminUserManagePage\\AdminUserManagePage.tsx":"20","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\AdminDashboardHomePage\\AdminDashboardHomePage.tsx":"21","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\UserPage\\UserPage.tsx":"22","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx":"23","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\EventService.ts":"24","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\OwnEventsPage\\OwnEvent.style.ts":"25","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\NotFound\\NotFound.style.tsx":"26","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\EventCard.tsx":"27","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\EditEventCard.tsx":"28","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\NewEventCard.tsx":"29","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx":"30","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\organisms\\UserAccordionEntry\\UserAccordionEntry.tsx":"31","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\RoleService.ts":"32","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\ParticipationService.ts":"33","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\UserAccordionEntry\\UserAccordionEntryDetails.tsx":"34"},{"size":382,"mtime":1677269154182,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1677759317993,"results":"37","hashOfConfig":"36"},{"size":6317,"mtime":1677269154171,"results":"38","hashOfConfig":"36"},{"size":3121,"mtime":1677759317995,"results":"39","hashOfConfig":"36"},{"size":7057,"mtime":1677750146037,"results":"40","hashOfConfig":"36"},{"size":907,"mtime":1677759317997,"results":"41","hashOfConfig":"36"},{"size":709,"mtime":1677750254513,"results":"42","hashOfConfig":"36"},{"size":323,"mtime":1677703360821,"results":"43","hashOfConfig":"36"},{"size":1179,"mtime":1677666411369,"results":"44","hashOfConfig":"36"},{"size":1817,"mtime":1677269154181,"results":"45","hashOfConfig":"36"},{"size":138,"mtime":1677273929738,"results":"46","hashOfConfig":"36"},{"size":2414,"mtime":1677666269456,"results":"47","hashOfConfig":"36"},{"size":234,"mtime":1677750254519,"results":"48","hashOfConfig":"36"},{"size":1933,"mtime":1677750254521,"results":"49","hashOfConfig":"36"},{"size":2987,"mtime":1677750254518,"results":"50","hashOfConfig":"36"},{"size":2251,"mtime":1677759318015,"results":"51","hashOfConfig":"36"},{"size":1653,"mtime":1677759318004,"results":"52","hashOfConfig":"36"},{"size":457,"mtime":1677759318002,"results":"53","hashOfConfig":"36"},{"size":3414,"mtime":1677759318003,"results":"54","hashOfConfig":"36"},{"size":2285,"mtime":1677759318001,"results":"55","hashOfConfig":"36"},{"size":635,"mtime":1677759318001,"results":"56","hashOfConfig":"36"},{"size":1166,"mtime":1677750694731,"results":"57","hashOfConfig":"36"},{"size":1871,"mtime":1677759318004,"results":"58","hashOfConfig":"36"},{"size":1268,"mtime":1677759317995,"results":"59","hashOfConfig":"36"},{"size":257,"mtime":1677269154180,"results":"60","hashOfConfig":"36"},{"size":266,"mtime":1677269154179,"results":"61","hashOfConfig":"36"},{"size":2697,"mtime":1677759318019,"results":"62","hashOfConfig":"36"},{"size":9597,"mtime":1677759317996,"results":"63","hashOfConfig":"36"},{"size":9047,"mtime":1677759317997,"results":"64","hashOfConfig":"36"},{"size":6125,"mtime":1677759317999,"results":"65","hashOfConfig":"36"},{"size":1500,"mtime":1677759318000,"results":"66","hashOfConfig":"36"},{"size":160,"mtime":1677750254512,"results":"67","hashOfConfig":"36"},{"size":892,"mtime":1677750254512,"results":"68","hashOfConfig":"36"},{"size":5707,"mtime":1677759317998,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"12d1200",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\index.tsx",[],["142","143"],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\App.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Contexts\\ActiveUserContext.tsx",["144"],"import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      setActiveUser(response.data);\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Router\\Router.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\NavBar\\NavBar.tsx",["145"],"import { AppBar, Avatar, Box, Button, Container, IconButton, Menu, MenuItem, Toolbar, Tooltip, Typography } from \"@mui/material\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport InterestsIcon from '@mui/icons-material/Interests';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ActiveUserContext from \"../../../Contexts/ActiveUserContext\";\r\nimport roles from \"../../../config/Roles\";\r\n\r\n\r\ntype Page = {\r\n  pageName: string, onClick: () => void\r\n}\r\n\r\n\r\nconst NavBar = () => {\r\n  const navigate = useNavigate();\r\n  const context = useContext(ActiveUserContext);\r\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const pages: Page[] = [{ pageName: \"Home\", onClick: () => { return navigate(\"/\") } }, { pageName: 'Events', onClick: () => { return navigate(\"/events\") } }, { pageName: 'About', onClick: () => { return navigate(\"/\") } }];\r\n  // if time basic profile page\r\n  const settings: Page[] = [{ pageName: 'Profile', onClick: () => { return navigate(\"/profile\") } }, { pageName: 'Own Events', onClick: () => { return navigate(\"/ownevents\") } }, { pageName: 'Logout', onClick: () => { return context.logout() } }];\r\n  const adminPages: Page[] = [\r\n    { pageName: \"MANAGE\", onClick: () => { return navigate(\"/admin\") } },\r\n  ]\r\n  useEffect(() => {\r\n    if (context.user){\r\n      setIsAdmin(context.user!.roles.some(role => role.name === roles.ADMIN))\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{ backgroundImage: \"linear-gradient(gray, black)\" }}>\r\n      <Container maxWidth=\"xl\" sx={{ width: \"60%\" }}>\r\n        <Toolbar disableGutters >\r\n          <InterestsIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 35,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            OurSpace\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem data-cy=\"hello\" key={page.pageName} onClick={page.onClick}>\r\n                  <Typography textAlign={\"center\"}>\r\n                    {page.pageName}\r\n                  </Typography>\r\n                </MenuItem>\r\n              ))}\r\n              {isAdmin &&\r\n                adminPages.map((page) => (\r\n                  <MenuItem id={page.pageName} key={page.pageName} onClick={page.onClick}>\r\n                    <Typography textAlign={\"center\"}>\r\n                      {page.pageName}\r\n                    </Typography>\r\n                  </MenuItem>\r\n                ))\r\n                }\r\n                <MenuItem id=\"test\" key=\"test\">\r\n                  <Typography textAlign={\"center\"}>\r\n                    {\"test\"}\r\n                  </Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n          </Box>\r\n          <InterestsIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page.pageName}\r\n                onClick={page.onClick}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page.pageName}\r\n              </Button>\r\n            ))}\r\n            {isAdmin &&\r\n              adminPages.map((page) => (\r\n                <MenuItem key={page.pageName} onClick={page.onClick}>\r\n                  <Typography textAlign={\"center\"}>\r\n                    {page.pageName}\r\n                  </Typography>\r\n                </MenuItem>\r\n              ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting.pageName} onClick={setting.onClick}>\r\n                  <Typography textAlign=\"center\">{setting.pageName}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default NavBar;\r\n","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\Footer\\Footer.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\UserService.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Authorities.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\AuthorityService.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Api.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\config\\Roles.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Router\\PrivateRoute.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\NotFound\\NotFoundPage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\UserPage\\UserTable.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\EventsManage\\EventsManagePage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\EventPage\\EventPage.tsx",["146"],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\OwnEventsPage\\OwnEventsPage.tsx",["147","148"],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\HomePage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\LoginPage\\LoginPage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\AdminUserManagePage\\AdminUserManagePage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\AdminDashboardHomePage\\AdminDashboardHomePage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\UserPage\\UserPage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\ProfilePage\\ProfilePage.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\EventService.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\OwnEventsPage\\OwnEvent.style.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\pages\\NotFound\\NotFound.style.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\EventCard.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\EditEventCard.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\EventCard\\NewEventCard.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\UserForm\\UserForm.tsx",["149"],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\organisms\\UserAccordionEntry\\UserAccordionEntry.tsx",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\RoleService.ts",["150"],"import api from \"../config/Api\";\r\n\r\nconst roleSet = new Set();\r\n\r\nconst RoleService = {\r\n  findAll: () => api.get(\"/user/roles\")}\r\nexport default RoleService;\r\n","C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\Services\\ParticipationService.ts",[],"C:\\Source\\üK223\\uek223_MultiUserApp_frontend\\src\\components\\molecules\\UserAccordionEntry\\UserAccordionEntryDetails.tsx",["151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":172,"column":6,"nodeType":"158","endLine":172,"endColumn":8,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":47,"column":6,"nodeType":"158","endLine":47,"endColumn":8,"suggestions":"161"},{"ruleId":"156","severity":1,"message":"160","line":32,"column":8,"nodeType":"158","endLine":32,"endColumn":10,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":11,"column":11,"nodeType":"165","messageId":"166","endLine":11,"endColumn":22},{"ruleId":"156","severity":1,"message":"160","line":21,"column":10,"nodeType":"158","endLine":21,"endColumn":12,"suggestions":"167"},{"ruleId":"163","severity":1,"message":"168","line":40,"column":22,"nodeType":"165","messageId":"166","endLine":40,"endColumn":35},{"ruleId":"163","severity":1,"message":"169","line":3,"column":7,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"156","severity":1,"message":"170","line":23,"column":8,"nodeType":"158","endLine":23,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadActiveUser'. Either include it or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'context.user'. Either include it or remove the dependency array.",["175"],["176"],"@typescript-eslint/no-unused-vars","'eventStyles' is assigned a value but never used.","Identifier","unusedVar",["177"],"'setPersonName' is assigned a value but never used.","'roleSet' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"181","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [loadActiveUser]",{"range":"187","text":"188"},"Update the dependencies array to be: [context.user]",{"range":"189","text":"190"},{"range":"191","text":"190"},{"range":"192","text":"190"},"Update the dependencies array to be: [user.id]",{"range":"193","text":"194"},[5561,5563],"[loadActiveUser]",[2013,2015],"[context.user]",[1253,1255],[883,885],[986,988],"[user.id]"]